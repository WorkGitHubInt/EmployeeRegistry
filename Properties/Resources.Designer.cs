//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeRegistry.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EmployeeRegistry.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WITH Subordinates (Id, ParentId) AS (
        ///	SELECT Id, Id as ParentId
        ///	FROM Employees
        ///	UNION ALL
        ///	SELECT e.Id, s.ParentId
        ///	FROM Employees e INNER JOIN Subordinates s ON (s.Id = e.ChiefId)
        ///)
        ///
        ///SELECT emain.Name,
        ///        (CASE 
        ///		    WHEN (SELECT CAST((strftime(&apos;%Y&apos;, date(&apos;now&apos;, &apos;-1 month&apos;)) + strftime(&apos;%j&apos;, date(&apos;now&apos;, &apos;-1 month&apos;)) / 365.2422) - (strftime(&apos;%Y&apos;, emain.EnrollmentDate) + strftime(&apos;%j&apos;, emain.EnrollmentDate) / 365.2422) AS INT)) * (SELECT p.YearPercent FROM Position p WHERE p.Id = emain.Posi [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Query1 {
            get {
                return ResourceManager.GetString("Query1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WITH Subordinates (Id, ParentId) AS (
        ///	SELECT Id, Id as ParentId
        ///	FROM Employees
        ///	UNION ALL
        ///	SELECT e.Id, s.ParentId
        ///	FROM Employees e INNER JOIN Subordinates s ON (s.Id = e.ChiefId)
        ///)
        ///
        ///SELECT emain.Name,
        ///    (
        ///        SELECT ifnull(SUM(
        ///            CASE
        ///                WHEN (SELECT CAST((strftime(&apos;%Y&apos;, date(&apos;now&apos;)) + strftime(&apos;%j&apos;, date(&apos;now&apos;)) / 365.2422) - (strftime(&apos;%Y&apos;, e1.EnrollmentDate) + strftime(&apos;%j&apos;, e1.EnrollmentDate) / 365.2422) AS INT)) * (SELECT p.YearPercent FROM Position p WHERE  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Query2 {
            get {
                return ResourceManager.GetString("Query2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WITH Subordinates (Id, ParentId) AS (
        ///	SELECT Id, Id as ParentId
        ///	FROM Employees
        ///	UNION ALL
        ///	SELECT e.Id, s.ParentId
        ///	FROM Employees e INNER JOIN Subordinates s ON (s.Id = e.ChiefId)
        ///)
        ///
        ///SELECT pmain.PositionName,
        ///    AVG(emain.BaseSalary + (
        ///            Case
        ///                WHEN emain.PositionId = 1 
        ///                    THEN 0
        ///                WHEN emain.PositionId = 2 
        ///                    THEN (
        ///                        SELECT ifnull(SUM(
        ///                            CASE
        ///                     [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Query3 {
            get {
                return ResourceManager.GetString("Query3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WITH Subordinates (Id, ParentId) AS (
        ///	SELECT Id, Id as ParentId
        ///	FROM Employees
        ///	UNION ALL
        ///	SELECT e.Id, s.ParentId
        ///	FROM Employees e INNER JOIN Subordinates s ON (s.Id = e.ChiefId)
        ///)
        ///
        ///SELECT SUM(emain.BaseSalary + (
        ///        Case
        ///            WHEN emain.PositionId = 1 
        ///                THEN 0
        ///            WHEN emain.PositionId = 2 
        ///                THEN (
        ///                    SELECT ifnull(SUM(
        ///                        CASE
        ///                            WHEN (SELECT CAST((strftime(&apos;%Y&apos;, date(&apos;now&apos;) [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string QueryAllSalary {
            get {
                return ResourceManager.GetString("QueryAllSalary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WITH Subordinates (Id, ParentId) AS (
        ///	SELECT Id, Id as ParentId
        ///	FROM Employees
        ///	UNION ALL
        ///	SELECT e.Id, s.ParentId
        ///	FROM Employees e INNER JOIN Subordinates s ON (s.Id = e.ChiefId)
        ///)
        ///
        ///SELECT emain.BaseSalary + (
        ///        Case
        ///            WHEN emain.PositionId = 1 
        ///                THEN 0
        ///            WHEN emain.PositionId = 2 
        ///                THEN (
        ///                    SELECT ifnull(SUM(
        ///                        CASE
        ///                            WHEN (SELECT CAST((strftime(&apos;%Y&apos;, date(&apos;now&apos;)) +  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string QuerySalary {
            get {
                return ResourceManager.GetString("QuerySalary", resourceCulture);
            }
        }
    }
}
